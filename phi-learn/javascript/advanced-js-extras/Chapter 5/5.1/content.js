<!-- Finding HTML Elements:-->
<!-- by id-->
<p id="intro">Hello World!</p>
<script>
var x=document.getElementById("intro");
document.write(x.innerHTML);	<!-- Hello World!
</script>

<!-- by tag name-->
<div id="main">
	<p>first line</p>
	<p>second line</p>
</div>
<script>
var x=document.getElementById("main");
var y=x.getElementsByTagName("p");
document.write(y[0].innerHTML);	// first line
</script>

<!-- by class name-->
<script>
document.getElementsByClassName("intro");
</script>

<!-- by HTML object collections-->
<form id="frm1" action="form_action.asp">
	First name: <input type="text" name="fname" value="Donald"><br>
	Last name:  <input type="text" name="lname" value="Duck"><br>
	<input type="submit" value="Submit">
</form>

<script>
	var x=document.forms["frm1"];
	for (var i=0; i<x.length; i++){
		document.write(x.elements[i].value);	//  finds frm1 in the forms collection and displays all element values
	}
</script>

<!-- HTML object collections accessible-->
- document.anchors
- document.forms
- document.images
- document.links

<!-- Changing HTML Output stream
<!-- document.write() can be used to write directly to the HTML output stream
<!-- Never use document.write() after the document is loaded. It will overwrite the document-->
<script>
document.write(Date());	<!-- Date: Sun Nov 10 2013 15:13:38 GMT-0800 (Pacific Standard Time)
</script>

<!-- Changing HTML Content-->
<p id="p1">Hello World!</p>
<h1 id="header">Old Header></h1>
<script>
document.getElementById("p1").innerHTML="New text!";	// changes content of <p> element
var element=document.getElementById("header");
element.innerHTML="New Header";	// changes content of header
</script>

<!-- Changing the Value of an Attribute-->
<img id="image" src="smiley.gif">
<script>
document.getElementById("image").src="landscape.jpg";	// changes the src attribute of an <img> element
</script>

<!--//////////////////////////////////-->
<!-- Changing CSS-->
<p id="p2">Hello World!</p>
<script>
document.getElementById("p2").style.color="blue";
document.getElementById("p2").style.fontFamily="Arial";
document.getElementById("p2").style.size="larger";
</script>

<!-- Events
<!-- Events are generated by the browser when:
<!-- - user clicks the mouse
<!-- - web page has loaded
<!-- - an image has been loaded
<!-- - the mouse moves over an element
<!-- - an input fields is changed
<!-- - a user strokes a key

<!-- This example changes the style of element with id="id1", when the user clicks a button-->
<h1 id="id1">My Heading 1</h1>
<button type="button"
onclick="document.getElementById('id1').style.color='red'">Click Me!</button>

<!-- Visibility-->
<p id="p1">
This is text.
</p>
<input type="button" value="Hide text"
onclick="document.getElementById('p1').style.visibility='hidden'" />
<input type="button" value="Show text"
onclick="document.getElementById('p1').style.visibility='visible'" />

<!-- changing content of h1 element when user clicks on it-->
<h1 onclick="this.innerHTML='Ooops!'">Click on the text!></h1>

<!-- calling a function from the event handler-->
<h1 onclick="changetext(this)">Click on the text!</h1>
<script>
function changetext(id){
	id.innerHTML="Ooops!";
}
</script>

<!-- HTML Event Attributes
<!-- Assign an onclick event to a button element:
<!-- displayDate will be executed when the button is clicked-->
<button onclick="displayDate()">Try it</button>
<script>
function displayDate(){
	document.getElementById("demo").innerHTML=Date();
}
</script>
<p id="demo"></p>

<!-- displayDate is assigned to myBtn and will be executed when the button is clicked-->
<button id="myBtn">Try it</button>
<script>
document.getElementById("myBtn").onclick=function(){displayDate()};
function displayDate(){
document.getElementById("demo").innerHTML=Date();
}
</script>
<p id="demo"></p>

<!-- onload and onunload events are triggered when the user enters or leaves the page.-->
<!-- onload can be used to check the browser type and version-->
<body onload="checkCookies()">
<script>
function checkCookies(){
	if(navigator.cookieEnabled==true){
		alert("Cookies are enabled")
	}
	else {
		alert("Cookies are not enabled")
	}
}
</script>
</body>

<!--onmouseover and onmouseout example-->
<div onmouseover="mOver(this)" onmouseout="mOut(this)" 
style="background-color:#D94A38;width:120px;height:20px;padding:40px;">
Mouse Over Me
</div>
<script>
function mOver(obj){  obj.innerHTML="Thank You"  }
function mOut(obj) {  obj.innerHTML="Mouse Over Me"  }
</script>

<!--onmousedown, onmouseup and onclick-->
<div onmousedown="mDown(this)" onmouseup="mUp(this)" 
style="background-color:#D94A38;width:90px;height:20px;padding:40px;">
Click Me
</div>
<script>
function mDown(obj){
	obj.style.backgroundColor="#1ec5e5";
	obj.innerHTML="Release Me"
}
function mUp(obj){
	obj.style.backgroundColor="#D94A38";
	obj.innerHTML="Thank You"
}
</script>

<!--Child Nodes and Node Values-->
<!--You can use childNodes and nodeValues properties to get the content of an element.-->
<!--firstChild property is the same as using childNodes[0]-->
<!--getElementById is a method, childNodes and NodeValue are properties-->
<p id="intro">Hello World!</p>
<script>
var txt1=document.getElementById("intro").childNodes[0].nodeValue;
var txt2=document.getElementById("intro").fistChild.nodeValue;
document.write(txt1);
document.write(txt2);
</script>