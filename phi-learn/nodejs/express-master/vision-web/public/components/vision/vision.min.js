var Vision=Vision||{};Backbone.View.prototype.event_aggregator=_.extend({},Backbone.Events),Backbone.sync=function(a){return function(b,c,d){d.beforeSend=function(a){var b=$("meta[name='csrf-token']").attr("content");a.setRequestHeader("X-CSRF-Token",b)},a(b,c,d)}}(Backbone.sync),Vision.Issue=Backbone.Model.extend({defaults:{title:"",state:"",date:"",ago:"",login:"",avatar_url:""}}),Vision.IssueList=Backbone.Collection.extend({projectId:"",model:Vision.Issue,url:function(){return"/project/"+this.projectId+"/issues"},initialize:function(a,b){this.projectId=b.projectId},parse:function(a){return a.id=a._id,a}}),Vision.IssueView=Backbone.View.extend({tagName:"li",className:"media",viewTemplate:visiontemplates["templates/issues.hbs"],render:function(){return this.$el.html(this.viewTemplate(this.model.toJSON())),this}}),Vision.IssueListView=Backbone.View.extend({Issues:[],initialize:function(a){a.projectId&&(this.Issues=a.issues||[],this.$el.html(""),this.create(a),this.refresh())},create:function(a){this.collection=new Vision.IssueList(this.Issues,{projectId:a.projectId}),this.render()},refresh:function(){var a=this;this.Issues.length||this.collection.fetch({success:function(){a.render()}})},render:function(){_.each(this.collection.models,function(a){this.add(a)},this)},add:function(a){var b=new Vision.IssueView({model:a});return this.$el.append(b.render().el),b}}),Vision.Commit=Backbone.Model.extend({defaults:{date:"",ago:"",message:"",login:"",avatar_url:""}}),Vision.CommitList=Backbone.Collection.extend({projectId:"",model:Vision.Commit,url:function(){return"/project/"+this.projectId+"/commits"},initialize:function(a,b){this.projectId=b.projectId},parse:function(a){return a.id=a._id,a}}),Vision.CommitView=Backbone.View.extend({tagName:"li",className:"media",viewTemplate:visiontemplates["templates/commits.hbs"],render:function(){return this.$el.html(this.viewTemplate(this.model.toJSON())),this}}),Vision.CommitListView=Backbone.View.extend({Commits:[],initialize:function(a){a.projectId&&(this.Commits=a.commits||[],this.$el.html(""),this.create(a),this.refresh())},refresh:function(){var a=this;this.Commits.length||this.collection.fetch({success:function(){a.render()}})},create:function(a){this.collection=new Vision.CommitList(this.Commits,{projectId:a.projectId}),this.render()},render:function(){_.each(this.collection.models,function(a){this.add(a)},this)},add:function(a){var b=new Vision.CommitView({model:a});return this.$el.append(b.render().el),b}}),Vision.Repository=Backbone.Model.extend({defaults:{id:"",name:"",description:"",enabled:""}}),Vision.RepositoryList=Backbone.Collection.extend({projectId:"",model:Vision.Repository,url:function(){return"/project/"+this.projectId+"/repos"},initialize:function(a,b){this.projectId=b.projectId},parse:function(a){return a.id=a._id,a}}),Vision.RepositoryView=Backbone.View.extend({tagName:"li",viewTemplate:visiontemplates["templates/repositories.hbs"],render:function(){return this.$el.html(this.viewTemplate(this.model.toJSON())),this}}),Vision.RepositoryListView=Backbone.View.extend({Repositories:[],initialize:function(a){if(a.projectId){var b=this;this.$el.html(""),this.collection=new Vision.RepositoryList(this.Repositories,{projectId:a.projectId}),this.collection.fetch({success:function(){b.render(),a.editMode?b.enableForm():b.disableForm()}})}},render:function(){_.each(this.collection.models,function(a){this.add(a)},this)},add:function(a){var b=new Vision.RepositoryView({model:a});return this.$el.append(b.render().el),b},enableForm:function(){this.$el.find("input:checkbox").remove("disabled")},disableForm:function(){this.$el.find("input:checkbox").attr("disabled","disabled")}}),Vision.Project=Backbone.Model.extend({defaults:{id:"",name:""},idAttribute:"_id",urlRoot:"/project",validate:function(a){var b=[];return""===a.name&&b.push("Please enter a name"),b.length>0?b:void 0}}),Vision.ProjectList=Backbone.Collection.extend({model:Vision.Project,url:function(){return"/project/"},initialize:function(){this.fetch()}}),Vision.ProjectView=Backbone.View.extend({tagName:"li",formTemplate:visiontemplates["templates/project-form.hbs"],viewTemplate:visiontemplates["templates/projects.hbs"],events:{"click a":"repository","click button.delete":"delete","click button.edit":"edit","click button.save":"save","click button.cancel":"cancel"},render:function(){var a=this.viewTemplate(this.model.toJSON());return this.$el.html(a),this},repository:function(a){var b={projectId:this.model.toJSON()._id,editMode:a.editMode||!1};this.event_aggregator.trigger("repository:join",b)},"delete":function(){this.model.destroy(),this.remove(),this.repository({editMode:!1})},edit:function(){var a=this.model.toJSON();this.$el.html(this.formTemplate(a)),this.repository({editMode:!0})},add:function(){this.$el.html(this.formTemplate(this.model.toJSON())),this.repository({editMode:!1})},cancel:function(){this.model.toJSON()._id;this.model.isNew()?this.remove():(this.render(),this.repository({editMode:!1})),Backbone.history.navigate("index",!0)},save:function(a){a.preventDefault();var b=this,c={};$(a.target).closest("form").find(":input").not("button").each(function(){c[$(this).attr("class")]=$(this).val()}),this.model.isValid()?c.repositories=$("#repository-list").find("input:checkbox:checked").map(function(){return $(this).val()}).get():b.formError(b.model,b.model.validationError,a),this.model.save(c,{error:function(c,d){b.formError(c,d,a)},success:function(){b.render(),b.repository({editMode:!1}),Backbone.history.navigate("index",!0)}})},formError:function(a,b,c){$(c.target).closest("form").find(".errors").html(""),_.each(b,function(a){$(c.target).closest("form").find(".errors").append("<li>"+a+"</li>")})}}),Vision.ProjectListView=Backbone.View.extend({Projects:[],el:$("ul#projects-list"),initialize:function(){this.event_aggregator.on("repository:join",this.repository,this),this.collection=new Vision.ProjectList(this.Projects),this.collection.on("reset",this.render,this),this.collection.on("add",this.add,this),this.collection.on("remove",this.remove,this),this.render()},repository:function(a){this.trigger("join",a)},render:function(){_.each(this.collection.models,function(a){this.add(a)},this)},add:function(a){var b=new Vision.ProjectView({model:a});return this.$el.append(b.render().el),b},remove:function(a){var b=a.attributes;_.each(this.Projects,function(a){_.isEqual(a,b)&&this.Projects.splice(_.indexOf(projects,a),1)})},showForm:function(){this.add(new Vision.Project).add()}}),Vision.Router=Backbone.Router.extend({projectListView:"",repositoryListView:"",issueListView:"",commitListView:"",socket:null,routes:{"":"index",add:"add"},initialize:function(a){this.socket=a,this.project(),this.listenTo(this.projectListView,"join",this.join),this.socket.on("issues",this.issues),this.socket.on("commits",this.commits)},join:function(a){this.repository(a),this.issues(a),this.commits(a),this.socket.emit("unsubscribe"),this.socket.emit("subscribe",{channel:a.projectId})},project:function(){this.projectListView=new Vision.ProjectListView},repository:function(a){this.repositoryListView=new Vision.RepositoryListView({el:"ul#repository-list",projectId:a.projectId,editMode:a.editMode})},issues:function(a){console.log("issues",a),this.issueListView=new Vision.IssueListView({el:"ul#issues-list",projectId:a.projectId,issues:a.issues})},commits:function(a){console.log("commits",a),this.commitListView=new Vision.CommitListView({el:"ul#commits-list",projectId:a.projectId,commits:a.commits})},index:function(){this.projectListView.render()},add:function(){this.projectListView.showForm()}}),Vision.Application=function(){this.start=function(){var a=io.connect("/",{secure:!0,port:"8443"}),b=new Vision.Router(a);Backbone.history.start(),b.navigate("index",!0)}},$(function(){var a=new Vision.Application;a.start()});